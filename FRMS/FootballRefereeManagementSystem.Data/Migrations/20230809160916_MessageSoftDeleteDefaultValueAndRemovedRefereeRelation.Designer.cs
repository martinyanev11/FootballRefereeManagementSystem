// <auto-generated />
using System;
using FootballRefereeManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballRefereeManagementSystem.Data.Migrations
{
    [DbContext(typeof(FootballRefereeManagementSystemDbContext))]
    [Migration("20230809160916_MessageSoftDeleteDefaultValueAndRemovedRefereeRelation")]
    partial class MessageSoftDeleteDefaultValueAndRemovedRefereeRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasComment("Age of applicant");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Contact number of applicant");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date and time of creation");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Email of applicant");

                    b.Property<int>("ExperienceInYears")
                        .HasColumnType("int")
                        .HasComment("Number of years of experience for similar job");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("First name of applicant");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit")
                        .HasComment("To track for one-time use for registration");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Last name of applicant");

                    b.Property<int>("StartingDivisionId")
                        .HasColumnType("int")
                        .HasComment("Дивизия, в която кандидата е подходящ да работи");

                    b.Property<int>("StartingRole")
                        .HasColumnType("int")
                        .HasComment("Позицията, която този кандидат е подходящ да заема");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StartingDivisionId");

                    b.ToTable("Applications");

                    b.HasComment("Application request to become a referee");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("RefereeId")
                        .HasColumnType("int")
                        .HasComment("The navigation to the referee for this user");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasComment("Customization of Default Identity User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea01fe26-36c8-4daa-b1c8-8b9209e82478"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69cf2ce8-a33d-4455-941c-65c3184615fe",
                            Email = "referee@bfs.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REFEREE@BFS.COM",
                            NormalizedUserName = "REFEREE@BFS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGfDHJiRrEfDT7QglrqOTxT5OC5luPfx9VDSIz312EvUWNcXEGcLqzgaCgj3SnJGbw==",
                            PhoneNumber = "0897123456",
                            PhoneNumberConfirmed = false,
                            RefereeId = 1,
                            SecurityStamp = "db733aa2-e6af-45eb-89f4-f313843a9477",
                            TwoFactorEnabled = false,
                            UserName = "referee@bfs.com"
                        },
                        new
                        {
                            Id = new Guid("1e48bbc8-cbf0-494c-89e0-6bcccc36cc6a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3899e519-88a0-4cbf-993e-9dffd3e1f8a3",
                            Email = "assitant_referee1@bfs.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ASSITANT_REFEREE1@BFS.COM",
                            NormalizedUserName = "ASSITANT_REFEREE1@BFS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEObwVPiIqJC2opIOUuUUaFfJIcBKFD7sCSiikArAMnREmfyxWu7UKzviCaB8UdwJwA==",
                            PhoneNumber = "0897123456",
                            PhoneNumberConfirmed = false,
                            RefereeId = 2,
                            SecurityStamp = "953c5389-11bf-4a85-985e-8838dbc244e9",
                            TwoFactorEnabled = false,
                            UserName = "assitant_referee1@bfs.com"
                        },
                        new
                        {
                            Id = new Guid("065a8654-fc52-43b4-8d3d-7e90a87e2bd9"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2941b6d-9e2a-4983-a52b-cbf5e6987d4d",
                            Email = "assitant_referee2@bfs.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ASSITANT_REFEREE2@BFS.COM",
                            NormalizedUserName = "ASSITANT_REFEREE2@BFS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDmlvKUB360yC2q38GYwd0+DVEGNvAGR5ojhBWopd9VZ9zLxRIBdGAnFhaTeVpkxzw==",
                            PhoneNumber = "0897123456",
                            PhoneNumberConfirmed = false,
                            RefereeId = 3,
                            SecurityStamp = "54aa92fc-e351-4099-b8c2-2e11844b5055",
                            TwoFactorEnabled = false,
                            UserName = "assitant_referee2@bfs.com"
                        },
                        new
                        {
                            Id = new Guid("35e56d1c-a7c2-445d-9eb5-0cdaecb0ebb1"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "945b8757-0ea0-4a15-8b52-d801b019b495",
                            Email = "delegate@bfs.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DELEGATE@BFS.COM",
                            NormalizedUserName = "DELEGATE@BFS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK4Es45HBx6xh9HVP6Mvw4lr7lizf8VvcMTSWkuIqzHkGl1cVehroLqA/3VeMS79/g==",
                            PhoneNumber = "0897123456",
                            PhoneNumberConfirmed = false,
                            RefereeId = 4,
                            SecurityStamp = "0d2f845c-5cff-4c19-9b10-897c8e4293bf",
                            TwoFactorEnabled = false,
                            UserName = "delegate@bfs.com"
                        },
                        new
                        {
                            Id = new Guid("d9f18631-5bdb-4b41-86f4-8d6dbe71efb6"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5dc0f90c-eda7-4fff-80dc-6931b1174852",
                            Email = "admin@bfs.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@BFS.COM",
                            NormalizedUserName = "ADMIN@BFS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEN59L55RvJjo6L+clLvejACU1M0/Hlz7sZYEHaMkN5puiap85h5lBGoyVyWH7mPz8A==",
                            PhoneNumber = "0897123456",
                            PhoneNumberConfirmed = false,
                            RefereeId = 5,
                            SecurityStamp = "e2dc0205-924a-40d8-88f7-7ebf282eba0f",
                            TwoFactorEnabled = false,
                            UserName = "admin@bfs.com"
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)")
                        .HasComment("Content of the article");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasComment("Image related to this article");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Title of the article");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasComment("Any news or announcements on the platform");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "На 08.06.2023г в ОС на БФС-Плевен се проведе заседание на СТК при ОС на БФС Плевен и бяха взети следните решения:\r\n\r\nНа 04.06.2023г. в среща от 18 кръг на първенството на „Б”ОФГ-изток между отборите на ФК\"Обнова-2022\" – Обнова и ФК\"Чавдар-1920\" – Бръшляница, проведена в с.Обнова от 18ч. В 80мин. на срещата при резултат 1:0 в полза на ФК\"Обнова-2022\" е отсъден 11-метров наказателен удар в полза на ФК\"Обнова-2022\".Следва бурен протест от състезателите на ФК\"Чавдар-1920\" – Бръшляница.Нанесени са удари на гл.съдия в главата и тялото от състезатели на ФК\"Чавдар-1920\" – Бръшляница.поради създалата се обстановка при която е застрашено здравето и сигурността на длъжностните лица и няма условия футболната среща да продължи, същата е прекратена.\r\n\r\nНа основание чл.24 ал.9 от наредбата на БФС,се присъжда служебна  загуба при резултат 4:0 в полза на ФК\"Обнова-2022\".\r\n\r\nНеизрядната страна няма право да обжалва наказанието по тази алинея.",
                            CreatedOn = new DateTime(2023, 8, 9, 16, 9, 15, 388, DateTimeKind.Utc).AddTicks(5376),
                            IsActive = true,
                            Title = "Заседание на СТК при ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 2,
                            Content = "В среща от 17-ти кръг от първенството на „Б” ОФГ-запад между отборите на ФК\"Мизия-1924\" – Кнежа и ФК”Спартак-1924”-Койнаре проведена на 28.05. от 18ч. в гр.Кнежа и бяха взети следните решения:За навлизане на публиката на гостите от ФК”Спартак-1924”-Койнаре на терена по  време на срещата :Наказва ФК”Спартак-1924”-Койнаре с предупреждение, лишаване от домакинство и глоба в размер на 150/сто и петдесет/лева  по чл.37 ал.1 буква „в” от ДП.",
                            CreatedOn = new DateTime(2023, 8, 9, 16, 9, 15, 388, DateTimeKind.Utc).AddTicks(5382),
                            IsActive = true,
                            Title = "Решение на ДК- ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 3,
                            Content = "В среща от 15-ти кръг от първенството на „Б” ОФГ-изток между отборите на ФК\"Славия\"-Новачене и ФК\"Обнова-2022\" - Обнова проведена на14.05.от 18ч. в с.Новачене и бяха взети следните решения:Наказва Явор Руменов Димитров  от отбора на ФК\"Славия\"-Новачене за получен червен картон със ССП за 1/една/ среща по чл.22 ал.1 т.1буква „з”от ДП.Наказва Галин Пламенов Георгиев от отбора на ФК\"Обнова-2022\" - Обнова за получен червен картон със ССП за 1/една/ среща по чл.22 ал.1 т.1буква „в”от ДП.",
                            CreatedOn = new DateTime(2023, 8, 9, 16, 9, 15, 388, DateTimeKind.Utc).AddTicks(5383),
                            IsActive = true,
                            Title = "Решение на ДК- ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Съдийската комисия към Българския футболен съюз уведомява клубовете в системата на българското първенство, че от началото на новия спортно-състезателен сезон 2023/2024 г. в сила влизат някои промени и допълнения към Правилата на играта в съответствие с изискванията на Международния борд на футболните асоциации (IFAB).",
                            CreatedOn = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "Промени и допълнения в Правилата на играта, влизащи в сила през новия сезон"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Ръководителят на отдел „Техническо развитие“ към УЕФА Франк К. Лудолф изпрати официално писмо до Българския футболен съюз, в което изказва положителната оценка на европейската централа за програмата за развитие на обучители на треньори на БФС, която отговаря на стандартите на УЕФА.\nНа панела Jira, проведен в Нион на 5 май т.г., Българският футболен съюз и Треньорската школа по футбол са получили отлични отзиви за работата си с менторите на треньори.",
                            CreatedOn = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "УЕФА с положителна оценка за развитието на обучители на треньори у нас"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Заседанието премина при следния дневен ред.\r\n\r\n1.Разглеждане на жалба от ФК „Свобода ”-Милковица за нередовен състезател.\r\n\r\nСлед като СТК се запозна с жалбата и с приложените доказателства по нея установи:\r\n\r\n1.На 09.11.2022г. по време на футболната среща от 12-кръг на „Б”ОФГ-Център  между ФК\"Спартак\"-Божурица и ФК „Свобода ”-Милковица.проведена в с.Божурица от11ч.,взема участие нередовен състезател в отбора на ФК\"Спартак\"-Божурица",
                            CreatedOn = new DateTime(2022, 11, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "Протокол №8 от заседание на СТК при ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 7,
                            Content = "В среща от 11-ти кръг от първенството на „Б” ОФГ-център,между отборите на ФК\"Бенковски\" – Петърница и ФК\"Устрем\" – Крета,проведена на 26.03.2023г. от 11ч. в с.Петърница наказва:Борислав Красимиров Петров от отбора на ФК\"Устрем\" – Крета за получен червен картон и обиди на гл.съдия със ССП за 2/две/срещи на основание чл.22ал2 т.1 буква”а”и „к”от Д.П.",
                            CreatedOn = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "Решение на ДК- ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 8,
                            Content = "В среща от 11-ти кръг от първенството на „Б” ОФГ-център,между отборите на ФК \"Вихър\" – Крушовене и ФК\"Ботев-2022\" – Комарево\r\n\r\nпроведена на  26.03.2023г. от 11ч в с.Крушовене  наказва:Борислав Бориславов Сергеев от отбора на ФК \"Вихър\" – Крушовене  за получен червен картон със  ССП за 1/една/среща на основание чл.22.ал.2 т.1 буква”б” от ДП",
                            CreatedOn = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "Решение на ДК- ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Бяха разгледани провиненията в срещи от 11-ти кръг първенството на „Б” ОФГ-изток\r\n\r\nВ среща от 11-ти кръг от първенството на „Б” ОФГ-изток  между отборите на ФК\"Славия\"-Новачене и ФК\" Пордим 2017\"-Пордим проведена      на  26.03.2023г. от 15ч в с.Новачене наказва:Георги Димитров Велчев от отбора на  ФК\" Пордим 2017\"-Пордим  за получен червен картон със  ССП за 1/една/среща на основание чл.22.ал.2 т.1 буква”а” от ДП.",
                            CreatedOn = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "Решение на ДК- ОС на БФС Плевен"
                        },
                        new
                        {
                            Id = 10,
                            Content = "По доклад на длъжностните лица и взе следните решения:\r\n\r\nНаказва :Николай Георгиев Иванов от отбора на ФК\"Чавдар-1920\" – Бръшляница за нанесени удари в главата на гл.съдия със ССП за срок от 1/една /година на основание чл.25 от ДП на БФС.Наказва:Цветан Христов Нинов от обора на ФК\"Чавдар-1920\" – Бръшляница,за нанесен удар в тялото на гл.съдия със ССП за срок от 1/една /година на основание чл.25 от ДП на БФС.Наказва:Емил Илиев Трифонов от отбора на ФК\"Чавдар-1920\" – Бръшляница за блъскане на гл.съдия със ССП за срок  от 6/шест/срещи по чл.23 ал.2 буква”д” от ДП на БФС",
                            CreatedOn = new DateTime(2023, 6, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Title = "Решение на ДК- ОС на БФС Плевен"
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Difficulty")
                        .HasColumnType("int")
                        .HasComment("Number representing the difficulty level of a division compared to the rest");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Division name");

                    b.HasKey("Id");

                    b.ToTable("Divisions");

                    b.HasComment("Division represents the level of the teams playing in it");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Difficulty = 5,
                            IsActive = true,
                            Name = "Първа професионална футболна лига"
                        },
                        new
                        {
                            Id = 2,
                            Difficulty = 4,
                            IsActive = true,
                            Name = "Втора професионална футболна лига"
                        },
                        new
                        {
                            Id = 3,
                            Difficulty = 3,
                            IsActive = true,
                            Name = "Трета аматьорска футболна лига"
                        },
                        new
                        {
                            Id = 4,
                            Difficulty = 2,
                            IsActive = true,
                            Name = "„А“ областнa футболнa групa"
                        },
                        new
                        {
                            Id = 5,
                            Difficulty = 1,
                            IsActive = true,
                            Name = "„Б“ областнa футболнa групa"
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int")
                        .HasComment("Information about guest team");

                    b.Property<int>("AwayTeamScore")
                        .HasColumnType("int")
                        .HasComment("Goals scored by away team");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int")
                        .HasComment("In what division is the match played");

                    b.Property<DateTime>("FixtureTime")
                        .HasColumnType("datetime2")
                        .HasComment("Date and time the match is played");

                    b.Property<bool>("HasFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Specifies whether the match has been played");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int")
                        .HasComment("Information about host team");

                    b.Property<int>("HomeTeamScore")
                        .HasColumnType("int")
                        .HasComment("Goals scored by home team");

                    b.Property<Guid?>("RefereeSquadId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The referee squad appointed to officiate the match");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int")
                        .HasComment("Season during which match takes place");

                    b.Property<int>("TownId")
                        .HasColumnType("int")
                        .HasComment("Town in which the match is played");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TownId");

                    b.HasIndex("AwayTeamId", "SeasonId");

                    b.HasIndex("HomeTeamId", "SeasonId");

                    b.ToTable("Matches");

                    b.HasComment("Information about a football match");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 17, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            RefereeSquadId = new Guid("5f7a5bad-da9c-4fd9-871a-483492e9bdaa"),
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 2,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 17, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 3,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 17, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 4,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 17, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 5,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 6,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 7,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 8,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 9, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 9,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 10,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 11,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 12,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 13,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 14,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 15,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 16,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 17,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 18,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 19,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 20,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 21,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 22,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 23,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 24,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 10, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 25,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 11, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 26,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 11, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 27,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 11, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 28,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2023, 11, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 29,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 3, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 30,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 3, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 31,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 3, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 32,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 3, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 33,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 34,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 35,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 36,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 37,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 38,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 39,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 40,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 41,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 29, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 42,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 29, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 43,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 29, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 44,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 4, 29, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 45,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 13, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 46,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 13, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 47,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 13, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 48,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 13, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 49,
                            AwayTeamId = 4,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 20, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 2,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 3
                        },
                        new
                        {
                            Id = 50,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 20, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 1,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 2
                        },
                        new
                        {
                            Id = 51,
                            AwayTeamId = 5,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 20, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 3,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 4
                        },
                        new
                        {
                            Id = 52,
                            AwayTeamId = 8,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 20, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 7,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 8
                        },
                        new
                        {
                            Id = 53,
                            AwayTeamId = 7,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 4,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 5
                        },
                        new
                        {
                            Id = 54,
                            AwayTeamId = 3,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 8,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 9
                        },
                        new
                        {
                            Id = 55,
                            AwayTeamId = 1,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 5,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 6
                        },
                        new
                        {
                            Id = 56,
                            AwayTeamId = 2,
                            AwayTeamScore = 0,
                            DivisionId = 4,
                            FixtureTime = new DateTime(2024, 5, 27, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = false,
                            HomeTeamId = 6,
                            HomeTeamScore = 0,
                            SeasonId = 2,
                            TownId = 7
                        },
                        new
                        {
                            Id = 57,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 58,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 59,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 60,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 61,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 62,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 63,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 64,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 9,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 10
                        },
                        new
                        {
                            Id = 65,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 66,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 67,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 68,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 69,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 70,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 71,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 72,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 10,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 11
                        },
                        new
                        {
                            Id = 73,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 74,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 75,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 76,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 77,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 78,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 79,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 80,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 11,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 12
                        },
                        new
                        {
                            Id = 81,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 82,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 83,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 84,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 85,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 86,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 87,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 88,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 12,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 13
                        },
                        new
                        {
                            Id = 89,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 90,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 91,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 92,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2022, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 93,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 94,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 95,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 96,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 13,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 14
                        },
                        new
                        {
                            Id = 97,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 98,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 99,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 100,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 3, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 101,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 102,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 103,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 104,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 14,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 15
                        },
                        new
                        {
                            Id = 105,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 106,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 107,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 108,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 109,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 110,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 111,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 112,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 15,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 16
                        },
                        new
                        {
                            Id = 113,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 114,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 115,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 116,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 117,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 118,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 119,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 120,
                            AwayTeamId = 17,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 4, 29, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 16,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 17
                        },
                        new
                        {
                            Id = 121,
                            AwayTeamId = 9,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 122,
                            AwayTeamId = 10,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 123,
                            AwayTeamId = 11,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 124,
                            AwayTeamId = 12,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 125,
                            AwayTeamId = 13,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 13, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 126,
                            AwayTeamId = 14,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 13, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 127,
                            AwayTeamId = 15,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 13, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        },
                        new
                        {
                            Id = 128,
                            AwayTeamId = 16,
                            AwayTeamScore = 0,
                            DivisionId = 5,
                            FixtureTime = new DateTime(2023, 5, 13, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HasFinished = true,
                            HomeTeamId = 17,
                            HomeTeamScore = 0,
                            SeasonId = 1,
                            TownId = 18
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasComment("The content of the message");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Time and date of creation");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<Guid>("RefereeSquadId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The match center where comment was made");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("User who created the message");

                    b.HasKey("Id");

                    b.HasIndex("RefereeSquadId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasComment("Messages the referee write in match center");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasComment("Age of the player");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("First name of the player");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Last name of the player");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("In what position the player plays in the team");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasComment("Player playing in specific team during specific season");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 3,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 4,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 5,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 6,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 7,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 8,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 9,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 10,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 11,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 12,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 13,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 14,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 15,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 16,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 17,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 18,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 19,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 20,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 21,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 22,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 23,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 24,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 25,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 26,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 27,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 28,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 29,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 30,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 31,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 32,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 33,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 34,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 35,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 36,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 37,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 38,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 39,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 40,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 41,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 42,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 43,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 44,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 45,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 46,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 47,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 48,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 49,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 50,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 51,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 52,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 53,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 54,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 55,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 56,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 57,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 58,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 59,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 60,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 61,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 62,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 63,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 64,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 65,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 66,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 67,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 68,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 69,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 70,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 71,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 72,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 73,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 74,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 75,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 76,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 77,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 78,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 79,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 80,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 81,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 82,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 83,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 84,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 85,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 86,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 87,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        },
                        new
                        {
                            Id = 88,
                            Age = 25,
                            FirstName = "ИмеФутболист",
                            IsActive = true,
                            LastName = "ФамилияФутболист"
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.PlayerTeamSeason", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasComment("Team playing in specific season");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasComment("The player in the team");

                    b.HasKey("TeamId", "SeasonId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayersTeamsSeasons");

                    b.HasComment("Player playing in a team during a season");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 1
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 2
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 3
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 4
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 5
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 6
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 7
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 8
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 9
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 10
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            PlayerId = 11
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 12
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 13
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 14
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 15
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 16
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 17
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 18
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 19
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 20
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 21
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            PlayerId = 22
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 23
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 24
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 25
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 26
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 27
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 28
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 29
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 30
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 31
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 32
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            PlayerId = 33
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 34
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 35
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 36
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 37
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 38
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 39
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 40
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 41
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 42
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 43
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            PlayerId = 44
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 45
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 46
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 47
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 48
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 49
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 50
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 51
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 52
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 53
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 54
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            PlayerId = 55
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 56
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 57
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 58
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 59
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 60
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 61
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 62
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 63
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 64
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 65
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            PlayerId = 66
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 67
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 68
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 69
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 70
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 71
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 72
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 73
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 74
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 75
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 76
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            PlayerId = 77
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 78
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 79
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 80
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 81
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 82
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 83
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 84
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 85
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 86
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 87
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            PlayerId = 88
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasComment("Age of the person represented by this entity");

                    b.Property<DateTime>("CareerStart")
                        .HasColumnType("datetime2")
                        .HasComment("Date and time of registration within the organization");

                    b.Property<int>("CurrentlyAppointedMatchesCount")
                        .HasColumnType("int")
                        .HasComment("The number of matches appointed to this entity on current round");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("First name of the person represented by this entity");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("~/Images/Referees/referee-default-avatar.png")
                        .HasComment("Picture of the person represented by this entity");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<bool>("IsAvaliable")
                        .HasColumnType("bit")
                        .HasComment("Gives information if person is free to officiate matches for current round");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Last name of the person represented by this entity");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasComment("Current role of the person represented by this entity within the organization");

                    b.Property<int>("TotalMatchesOfficiated")
                        .HasColumnType("int")
                        .HasComment("Number of matches officiated");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The registered user related to this entity");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Referees");

                    b.HasComment("The main entity of the application");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            CareerStart = new DateTime(2018, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentlyAppointedMatchesCount = 0,
                            FirstName = "ИмеСъдия",
                            IsActive = true,
                            IsAvaliable = true,
                            LastName = "ФламилияСъдия",
                            Role = 0,
                            TotalMatchesOfficiated = 0,
                            UserId = new Guid("ea01fe26-36c8-4daa-b1c8-8b9209e82478")
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            CareerStart = new DateTime(2018, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentlyAppointedMatchesCount = 0,
                            FirstName = "ИмеСъдия",
                            IsActive = true,
                            IsAvaliable = true,
                            LastName = "ФламилияСъдия",
                            Role = 1,
                            TotalMatchesOfficiated = 0,
                            UserId = new Guid("1e48bbc8-cbf0-494c-89e0-6bcccc36cc6a")
                        },
                        new
                        {
                            Id = 3,
                            Age = 30,
                            CareerStart = new DateTime(2018, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentlyAppointedMatchesCount = 0,
                            FirstName = "ИмеСъдия",
                            IsActive = true,
                            IsAvaliable = true,
                            LastName = "ФламилияСъдия",
                            Role = 1,
                            TotalMatchesOfficiated = 0,
                            UserId = new Guid("065a8654-fc52-43b4-8d3d-7e90a87e2bd9")
                        },
                        new
                        {
                            Id = 4,
                            Age = 30,
                            CareerStart = new DateTime(2018, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentlyAppointedMatchesCount = 0,
                            FirstName = "ИмеСъдия",
                            IsActive = true,
                            IsAvaliable = true,
                            LastName = "ФламилияСъдия",
                            Role = 2,
                            TotalMatchesOfficiated = 0,
                            UserId = new Guid("35e56d1c-a7c2-445d-9eb5-0cdaecb0ebb1")
                        },
                        new
                        {
                            Id = 5,
                            Age = 30,
                            CareerStart = new DateTime(2018, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentlyAppointedMatchesCount = 0,
                            FirstName = "ИмеСъдия",
                            IsActive = true,
                            IsAvaliable = false,
                            LastName = "ФламилияСъдия",
                            Role = 3,
                            TotalMatchesOfficiated = 0,
                            UserId = new Guid("d9f18631-5bdb-4b41-86f4-8d6dbe71efb6")
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.RefereeDivision", b =>
                {
                    b.Property<int>("RefereeId")
                        .HasColumnType("int")
                        .HasComment("Referee in specific division");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int")
                        .HasComment("Division in which referee is allowed to offciate");

                    b.Property<int>("DivisionMatchesOfficiated")
                        .HasColumnType("int")
                        .HasComment("The count of matches referee officiated in this division");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.HasKey("RefereeId", "DivisionId");

                    b.HasIndex("DivisionId");

                    b.ToTable("RefereesDivisions");

                    b.HasComment("Mapping table for Referee and Division");

                    b.HasData(
                        new
                        {
                            RefereeId = 1,
                            DivisionId = 5,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 1,
                            DivisionId = 4,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 2,
                            DivisionId = 5,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 2,
                            DivisionId = 4,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 3,
                            DivisionId = 5,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 3,
                            DivisionId = 4,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 4,
                            DivisionId = 5,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 4,
                            DivisionId = 4,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 4,
                            DivisionId = 3,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 5,
                            DivisionId = 2,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        },
                        new
                        {
                            RefereeId = 5,
                            DivisionId = 1,
                            DivisionMatchesOfficiated = 0,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.RefereeSquad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key");

                    b.Property<int>("DelegateId")
                        .HasColumnType("int")
                        .HasComment("Delegate who will supervise the officials");

                    b.Property<int>("FirstAssistantRefereeId")
                        .HasColumnType("int")
                        .HasComment("First assistant of the match");

                    b.Property<int>("MainRefereeId")
                        .HasColumnType("int")
                        .HasComment("Main referee of the squad");

                    b.Property<int>("MatchId")
                        .HasColumnType("int")
                        .HasComment("Match assigned to the squad");

                    b.Property<int>("SecondAssistantRefereeId")
                        .HasColumnType("int")
                        .HasComment("Second assistant of the match");

                    b.HasKey("Id");

                    b.HasIndex("DelegateId");

                    b.HasIndex("FirstAssistantRefereeId");

                    b.HasIndex("MainRefereeId");

                    b.HasIndex("MatchId")
                        .IsUnique();

                    b.HasIndex("SecondAssistantRefereeId");

                    b.ToTable("RefereesSquads");

                    b.HasComment("Every referee squad consists of 1 main ref, 2 assitants and a delegate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f7a5bad-da9c-4fd9-871a-483492e9bdaa"),
                            DelegateId = 4,
                            FirstAssistantRefereeId = 2,
                            MainRefereeId = 1,
                            MatchId = 1,
                            SecondAssistantRefereeId = 3
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasComment("Short name for the season (e.g. 2004/05, 2011/12, 2022/23)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2")
                        .HasComment("End of the season");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2")
                        .HasComment("Start of the season");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2)
                        .HasComment("Current status of the season");

                    b.HasKey("Id");

                    b.ToTable("Seasons");

                    b.HasComment("Season is the timespan in which all matches between teams are played");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "2022/23",
                            End = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2022, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "2023/24",
                            End = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name of the team");

                    b.Property<int>("TownId")
                        .HasColumnType("int")
                        .HasComment("In which town the team is located");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Teams");

                    b.HasComment("Team that plays matches in specific division during specific season");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Ботев",
                            TownId = 2
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Вихър",
                            TownId = 3
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Гигант",
                            TownId = 4
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Космос",
                            TownId = 5
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Левски",
                            TownId = 6
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Светослав",
                            TownId = 7
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Ситомир",
                            TownId = 8
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Тръстеник",
                            TownId = 9
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Ботев",
                            TownId = 10
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Ботев",
                            TownId = 11
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Виная",
                            TownId = 12
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Динамо",
                            TownId = 13
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            Name = "Обнова",
                            TownId = 14
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            Name = "Славия",
                            TownId = 15
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            Name = "Спартак",
                            TownId = 16
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            Name = "Пордим",
                            TownId = 17
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            Name = "Чавдар",
                            TownId = 18
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.TeamSeason", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasComment("Team that participates specific season");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int")
                        .HasComment("The specific season");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int")
                        .HasComment("In which division the team plays");

                    b.Property<int>("Draws")
                        .HasColumnType("int")
                        .HasComment("Number of drawn matches during specific season");

                    b.Property<int>("GoalsAgainst")
                        .HasColumnType("int")
                        .HasComment("Number of goals scored againsts this team during specific season");

                    b.Property<int>("GoalsFor")
                        .HasColumnType("int")
                        .HasComment("Number of goals scored by this team during specific season");

                    b.Property<int>("Losses")
                        .HasColumnType("int")
                        .HasComment("Number of lost matches during specific season");

                    b.Property<int>("Placement")
                        .HasColumnType("int")
                        .HasComment("Placement in the division during the season");

                    b.Property<int>("Points")
                        .HasColumnType("int")
                        .HasComment("Points earned during season");

                    b.Property<int>("ShirtColor")
                        .HasColumnType("int")
                        .HasComment("Color of the player's shirts");

                    b.Property<int>("Wins")
                        .HasColumnType("int")
                        .HasComment("Number of won matches during specific season");

                    b.HasKey("TeamId", "SeasonId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("SeasonId");

                    b.ToTable("TeamsSeasons");

                    b.HasComment("Mapping table for team and season");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            SeasonId = 1,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 11,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 1,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 0,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 1,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 4,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 1,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 2,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 1,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 11,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 2,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 0,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 3,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 4,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 4,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 2,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 5,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 7,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 6,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 6,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 7,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 1,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 8,
                            SeasonId = 2,
                            DivisionId = 4,
                            Draws = 0,
                            GoalsAgainst = 0,
                            GoalsFor = 0,
                            Losses = 0,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 10,
                            Wins = 0
                        },
                        new
                        {
                            TeamId = 9,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 3,
                            GoalsAgainst = 32,
                            GoalsFor = 37,
                            Losses = 5,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 0,
                            Wins = 8
                        },
                        new
                        {
                            TeamId = 10,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 1,
                            GoalsAgainst = 73,
                            GoalsFor = 20,
                            Losses = 14,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 10,
                            Wins = 1
                        },
                        new
                        {
                            TeamId = 11,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 1,
                            GoalsAgainst = 56,
                            GoalsFor = 33,
                            Losses = 9,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 5,
                            Wins = 6
                        },
                        new
                        {
                            TeamId = 12,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 2,
                            GoalsAgainst = 19,
                            GoalsFor = 48,
                            Losses = 3,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 11,
                            Wins = 11
                        },
                        new
                        {
                            TeamId = 13,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 1,
                            GoalsAgainst = 20,
                            GoalsFor = 62,
                            Losses = 2,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 8,
                            Wins = 13
                        },
                        new
                        {
                            TeamId = 14,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 1,
                            GoalsAgainst = 36,
                            GoalsFor = 26,
                            Losses = 11,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 0,
                            Wins = 4
                        },
                        new
                        {
                            TeamId = 15,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 2,
                            GoalsAgainst = 38,
                            GoalsFor = 28,
                            Losses = 9,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 4,
                            Wins = 5
                        },
                        new
                        {
                            TeamId = 16,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 3,
                            GoalsAgainst = 37,
                            GoalsFor = 22,
                            Losses = 9,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 2,
                            Wins = 4
                        },
                        new
                        {
                            TeamId = 17,
                            SeasonId = 1,
                            DivisionId = 5,
                            Draws = 4,
                            GoalsAgainst = 16,
                            GoalsFor = 51,
                            Losses = 1,
                            Placement = 0,
                            Points = 0,
                            ShirtColor = 3,
                            Wins = 11
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasComment("Name of the town");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("Zone in which town is located");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("Towns");

                    b.HasComment("Where teams and referees are located and matches are played");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Плевен",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Трънчовица",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Гулянци",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Белене",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Гривица",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Брест",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Лепица",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Никопол",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Тръстеник",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Българене",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Вълчитрън",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Згалево",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            Name = "Изгрев",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            Name = "Обнова",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            Name = "Новачене",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            Name = "Муселиево",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            Name = "Пордим",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 18,
                            IsActive = true,
                            Name = "Бръшляница",
                            ZoneId = 1
                        });
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Soft delete value");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Name of the zone");

                    b.HasKey("Id");

                    b.ToTable("Zones");

                    b.HasComment("Zone that is part of region in the country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Плевен Изток"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Плевен Запад"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Плевен Център"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Плевенска Област"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Application", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Division", "StartingDivision")
                        .WithMany("Applications")
                        .HasForeignKey("StartingDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StartingDivision");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Match", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Division", "Division")
                        .WithMany("Matches")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Town", "Town")
                        .WithMany("Matches")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.TeamSeason", "AwayTeam")
                        .WithMany("AwayGames")
                        .HasForeignKey("AwayTeamId", "SeasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.TeamSeason", "HomeTeam")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeTeamId", "SeasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("Division");

                    b.Navigation("HomeTeam");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Message", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.RefereeSquad", "RefereeSquad")
                        .WithMany("Messages")
                        .HasForeignKey("RefereeSquadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RefereeSquad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.PlayerTeamSeason", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Player", "Player")
                        .WithMany("PlayerTeamsSeasons")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.TeamSeason", "TeamSeason")
                        .WithMany("TeamSeasonPlayers")
                        .HasForeignKey("TeamId", "SeasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("TeamSeason");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Referee", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.ApplicationUser", "User")
                        .WithOne("Referee")
                        .HasForeignKey("FootballRefereeManagementSystem.Data.Models.Referee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.RefereeDivision", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Division", "Division")
                        .WithMany("DivisionReferees")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Referee", "Referee")
                        .WithMany("RefereeDivisions")
                        .HasForeignKey("RefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Referee");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.RefereeSquad", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Referee", "Delegate")
                        .WithMany("DelegateRefereeSquads")
                        .HasForeignKey("DelegateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Referee", "FirstAssistantReferee")
                        .WithMany("FirstAssistantRefereeSquads")
                        .HasForeignKey("FirstAssistantRefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Referee", "MainReferee")
                        .WithMany("MainRefereeSquads")
                        .HasForeignKey("MainRefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Match", "Match")
                        .WithOne("RefereeSquad")
                        .HasForeignKey("FootballRefereeManagementSystem.Data.Models.RefereeSquad", "MatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Referee", "SecondAssistantReferee")
                        .WithMany("SecondAssistantRefereeSquads")
                        .HasForeignKey("SecondAssistantRefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Delegate");

                    b.Navigation("FirstAssistantReferee");

                    b.Navigation("MainReferee");

                    b.Navigation("Match");

                    b.Navigation("SecondAssistantReferee");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Team", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Town", "Town")
                        .WithMany("Teams")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.TeamSeason", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Division", "Division")
                        .WithMany("TeamsSeasons")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Season", "Season")
                        .WithMany("SeasonTeams")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Team", "Team")
                        .WithMany("TeamSeasons")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Season");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Town", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.Zone", "Zone")
                        .WithMany("Towns")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballRefereeManagementSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("FootballRefereeManagementSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Referee");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Division", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("DivisionReferees");

                    b.Navigation("Matches");

                    b.Navigation("TeamsSeasons");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Match", b =>
                {
                    b.Navigation("RefereeSquad");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Player", b =>
                {
                    b.Navigation("PlayerTeamsSeasons");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Referee", b =>
                {
                    b.Navigation("DelegateRefereeSquads");

                    b.Navigation("FirstAssistantRefereeSquads");

                    b.Navigation("MainRefereeSquads");

                    b.Navigation("RefereeDivisions");

                    b.Navigation("SecondAssistantRefereeSquads");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.RefereeSquad", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Season", b =>
                {
                    b.Navigation("SeasonTeams");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Team", b =>
                {
                    b.Navigation("TeamSeasons");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.TeamSeason", b =>
                {
                    b.Navigation("AwayGames");

                    b.Navigation("HomeGames");

                    b.Navigation("TeamSeasonPlayers");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Town", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("FootballRefereeManagementSystem.Data.Models.Zone", b =>
                {
                    b.Navigation("Towns");
                });
#pragma warning restore 612, 618
        }
    }
}
